{"version":3,"sources":["redux/nodesReducer.js","components/header/header.jsx","components/nodesList/nodesList.jsx","components/alert/alert.jsx","components/addNode/addNode.jsx","components/information/Information.jsx","components/loader/loader.jsx","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["timeout","SET_NODES","CHANGE_ALERT","CHANGE_LOADIND","dataBase","initialsState","nodes","isLoading","alert","show","type","nodesReducer","state","action","Object","keys","map","key","id","changeAlert1","changeLoading","changeAlert","dispatch","clearTimeout","setTimeout","getNodes","axios","then","response","data","Header","className","src","alt","to","NodesList","removeNode","node","index","title","date","onClick","class","Alert","props","message","AddNodeForm","reduxForm","form","onSubmit","handleSubmit","Field","component","name","autoFocus","Information","Loader","role","compose","withRouter","connect","addNode","useEffect","location","pathname","onClockAddNode","formData","Date","minutes","getMinutes","hours","getHours","day","getDate","monthIndex","getMonth","year","getFullYear","console","log","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09fd3d50.chunk.js","sourcesContent":["import * as axios from 'axios'\r\n\r\nconst SET_NODES = 'SET_NODES'\r\nconst CHANGE_ALERT = 'CHANGE_ALERT'\r\nconst CHANGE_LOADIND = 'CHANGE_LOADIND'\r\n\r\nconst dataBase = 'https://todolist-7b978-default-rtdb.firebaseio.com'\r\n\r\nconst initialsState = {\r\n   nodes: [],\r\n   isLoading: false,\r\n   alert: {show: false, type: ''}\r\n}\r\n\r\nconst nodesReducer = (state=initialsState,action) => {\r\n   switch(action.type){\r\n      case SET_NODES: if(!action.nodes) return {...state, nodes: []}\r\n      return ({\r\n         ...state,\r\n         nodes: [...Object.keys(action.nodes).map(key=>{\r\n            return {\r\n               ...action.nodes[key],\r\n               id: key\r\n            }\r\n         })]\r\n      })\r\n      case CHANGE_ALERT: return ({\r\n         ...state,\r\n         alert: {...state.alert, show: action.alert.show, type: action.alert.type}\r\n      })\r\n      case CHANGE_LOADIND: return ({\r\n         ...state,\r\n         isLoading: action.isLoading\r\n      })\r\n      default: return {...state}\r\n   }\r\n}\r\n\r\nexport default nodesReducer\r\n\r\nexport const setNodes = (nodes) => ({type: SET_NODES, nodes}) \r\n\r\nexport const changeAlert1 = (alert) => ({type: CHANGE_ALERT, alert})\r\n\r\nexport const changeLoading = (isLoading) => ({type: CHANGE_LOADIND, isLoading})\r\n\r\nlet timeout;\r\n\r\nexport const changeAlert = (alert) => (dispatch) => {\r\n   if(timeout)clearTimeout(timeout)\r\n   dispatch(changeAlert1(alert))\r\n   timeout=setTimeout(() => {\r\n      dispatch(changeAlert1({type: '', show: false}))\r\n  }, 55000);\r\n}\r\n\r\n\r\nexport const getNodes = () => (dispatch) => {\r\n   dispatch(changeLoading(true))\r\n   axios.get(`${dataBase}/nodes.json`).then((response)=>{\r\n      dispatch(changeLoading(false))\r\n      dispatch(setNodes(response.data))\r\n   })\r\n}\r\n\r\nexport const addNode = (node) => (dispatch) => {\r\n   if(!node.title)  dispatch(changeAlert({type: 'warning', show: true}))\r\n   else {\r\n      dispatch(changeLoading(true))\r\n      axios.post(`${dataBase}/nodes.json`, node).then((response)=>{\r\n      dispatch(changeAlert({type: 'add', show: true}))\r\n      dispatch(getNodes())\r\n      dispatch(changeLoading(false))\r\n   })}\r\n}\r\n\r\nexport const removeNode = (id) => (dispatch) => {\r\n   axios.delete(`${dataBase}/nodes/${id}.json`).then((response)=>{\r\n      dispatch(changeAlert({type: 'remove', show: true}))\r\n      dispatch(getNodes())\r\n   })\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst headerLogo = 'https://static10.tgstat.ru/channels/_0/e2/e2db1e0464d24e6c4cbcbd17ed634d11.jpg'\r\n\r\nconst Header = () => {\r\n   return (\r\n      <header className='header'>\r\n         <div className='header__content'>\r\n            <img className='header__logo' src={headerLogo} alt=\"\"/>\r\n            <nav className='header__menu menu'>\r\n               <NavLink to='/main' className='menu__item'>Главная</NavLink>\r\n               <NavLink to='/info' className='menu__item'>Информация</NavLink>\r\n            </nav>\r\n            \r\n         </div> \r\n      </header>\r\n   )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nconst NodesList = ({nodes, removeNode}) => {\r\n   return (\r\n      <ul className='nodesList'> \r\n       {nodes.map((node, index)=> (\r\n         <li className='nodesList__node node' key={index}>\r\n            <div>\r\n            <strong className='node__title'>{node.title}</strong> \r\n            <small className='node__date'>{node.date}</small> \r\n            </div>\r\n            <button onClick={()=>removeNode(node.id)}  type=\"button\" class=\"node__closeBtn close\">&times;</button>\r\n         </li>))}\r\n      </ul>\r\n   )\r\n}\r\n\r\nexport default NodesList","import React from 'react'\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\nconst Alert = (props) => {\r\n   const className = props.alert.type === 'remove'?'remove alert-danger':\r\n   props.alert.type === 'add'?'add alert-success':'warning alert-warning'\r\n   \r\n   let message = ''\r\n\r\n   switch(className){\r\n      case 'remove alert-danger': message = 'Задача удалена'; break\r\n      case 'add alert-success': message = 'Задача добавлена'; break\r\n      case 'warning alert-warning': message = 'Что-то пошло не так'; break\r\n      default: break\r\n   }\r\n\r\n\r\n   return (  \r\n        <div className={`alert ${className}`}> \r\n            <span> <strong>Внимание!</strong> {message} </span>\r\n            <button onClick={() => { props.changeAlert({ show: false, type: '' }) }} type=\"button\" class=\"alert__closeBtn close\">&times;</button>\r\n         </div> \r\n   )\r\n}\r\n\r\nexport default Alert","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\n\r\nconst AddNode = (props) => {\r\n   return (\r\n      <form className='addNode' onSubmit={props.handleSubmit}>\r\n         <Field className='form-control' component='input' name='node' changeAlert={props.changeAlert} autoFocus/>\r\n         <div className='addBtn'><button className='btn btn-success' type='submit'>Add Task</button></div>\r\n      </form>\r\n   )\r\n}\r\n\r\nconst AddNodeForm = reduxForm({form: 'addNodeForm'})(AddNode)\r\n\r\nexport default AddNodeForm","import React from 'react'\r\n\r\nconst Information = () =>{\r\n   return (\r\n      <div className=\"info\">\r\n         <div className=\"info__content\">\r\n            <p>Данное приложение предназначено для создания заметок</p>\r\n            <p>React version: 17.0.1</p>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Information","import React from 'react'\r\n\r\nconst Loader = () => {\r\n   return (\r\n      <div className='loader'>\r\n         <div className=\"spinner-border text-primary\" role=\"status\">\r\n            <span className=\"visually-hidden\"></span>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Loader","import './scss/App.scss';\nimport { connect } from 'react-redux';\nimport { addNode, changeAlert, getNodes, removeNode } from './redux/nodesReducer';\nimport { useEffect } from 'react';\nimport Header from './components/header/header';\nimport NodesList from './components/nodesList/nodesList';\nimport Alert from './components/alert/alert';\nimport AddNodeForm from './components/addNode/addNode';\nimport { compose } from 'redux';\nimport { Redirect, Route, withRouter } from 'react-router-dom';\nimport Information from './components/information/Information';\nimport Loader from './components/loader/loader';\n\nfunction App(props) {\n  \n  useEffect(()=>{\n    props.getNodes()\n  }, [])\n\n  useEffect(()=>{\n    if(props.location.pathname==='/main')props.changeAlert({show:false, type: ''})\n  },[props.location.pathname])\n\n  const onClockAddNode = (formData) =>{\n\n    let date = new Date()\n    let minutes = date.getMinutes();\n    let hours = date.getHours();\n    let day = date.getDate();\n    let monthIndex = date.getMonth();\n    let year = date.getFullYear();\n   \n\n    props.addNode(\n      {\n        title:formData.node,\n        date: day + '.' + monthIndex + '.' + year + '_' + hours + ':' + minutes\n      })\n  }\n  if(props.isLoading){ console.log('hello') ;return (\n    <div className=\"wrapper\">\n      <Header/>\n      <Loader />\n    </div>\n  )}\n\n  return (\n    <div className=\"wrapper\">\n      <Header/>\n      <Redirect to='/main'/>\n      <Route path='/main'  render={()=>(\n        <>\n          {(props.alert.show) && <Alert alert={props.alert} changeAlert={props.changeAlert}/>}\n          <AddNodeForm onSubmit={onClockAddNode} {...props}/>\n          <NodesList nodes={props.nodes} removeNode={props.removeNode} changeAlert={props.changeAlert}/>\n        </>)} \n      />\n      <Route path='/info'  render={()=><Information/>} />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  nodes: state.data.nodes,\n  alert: state.data.alert,\n  isLoading: state.data.isLoading\n})\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, {getNodes,removeNode, changeAlert, addNode})\n)(App)\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport nodesReducer from \"./nodesReducer\";\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nconst reducers = combineReducers({\r\n   data: nodesReducer,\r\n   form: formReducer\r\n})\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk))\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter >\n          <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}