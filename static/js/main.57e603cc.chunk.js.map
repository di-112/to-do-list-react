{"version":3,"sources":["redux/nodesReducer.js","components/header/header.jsx","components/nodesList/nodesList.jsx","components/alert/alert.jsx","components/addNode/addNode.jsx","components/information/Information.jsx","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["ADD_NODE","REMOVE_NODE","SET_NODES","CHANGE_ALERT","dataBase","initialsState","nodes","loading","alert","show","type","nodesReducer","state","action","node","filter","_","id","Object","keys","map","key","changeAlert","getNodes","dispatch","axios","then","response","data","Header","className","src","alt","to","exact","NodesList","removeNode","index","title","date","onClick","class","Alert","props","message","AddNodeForm","reduxForm","form","onSubmit","handleSubmit","Field","component","name","autoFocus","Information","compose","withRouter","connect","addNode","useEffect","formData","Date","toJSON","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57e603cc.chunk.js","sourcesContent":["import * as axios from 'axios'\r\n\r\nconst ADD_NODE = 'ADD_NODE'\r\nconst REMOVE_NODE = 'REMOVE_NODE'\r\nconst SET_NODES = 'SET_NODES'\r\nconst CHANGE_ALERT = 'CHANGE_ALERT'\r\n\r\nconst dataBase = 'https://todolist-7b978-default-rtdb.firebaseio.com'\r\n\r\nconst initialsState = {\r\n   nodes: [],\r\n   loading: false,\r\n   alert: {show: false, type: ''}\r\n}\r\n\r\nconst nodesReducer = (state=initialsState,action) => {\r\n   switch(action.type){\r\n      case ADD_NODE: return ({\r\n         ...state,\r\n         nodes: [action.node ,...state.nodes]\r\n      })\r\n      case REMOVE_NODE: return ({\r\n         ...state,\r\n         nodes: [...state.nodes].filter((_,id)=>id!=action.id)\r\n      })\r\n      case SET_NODES: if(!action.nodes) return {...state, nodes: []}\r\n      return ({\r\n         ...state,\r\n         nodes: [...Object.keys(action.nodes).map(key=>{\r\n            return {\r\n               ...action.nodes[key],\r\n               id: key\r\n            }\r\n         })]\r\n      })\r\n      case CHANGE_ALERT: return ({\r\n         ...state,\r\n         alert: {...state.alert, show: action.alert.show, type: action.alert.type}\r\n      })\r\n      default: return {...state}\r\n   }\r\n}\r\n\r\nexport default nodesReducer\r\n\r\nexport const setNodes = (nodes) => ({type: SET_NODES, nodes}) \r\n\r\n//export const removeNode = (id) => ({type: REMOVE_NODE, id})\r\n\r\nexport const changeAlert = (alert) => ({type: CHANGE_ALERT, alert})\r\n\r\n//export const addNode = (node) => ({type: ADD_NODE, node})\r\n\r\nexport const getNodes = () => (dispatch) => {\r\n   axios.get(`${dataBase}/nodes.json`).then((response)=>{\r\n      dispatch(setNodes(response.data))\r\n   })\r\n}\r\n\r\nexport const addNode = (node) => (dispatch) => {\r\n   if(!node.title)  dispatch(changeAlert({type: 'warning', show: true}))\r\n   else axios.post(`${dataBase}/nodes.json`, node).then((response)=>{\r\n      dispatch(changeAlert({type: 'add', show: true}))\r\n      dispatch(getNodes())\r\n   })\r\n}\r\n\r\nexport const removeNode = (id) => (dispatch) => {\r\n   axios.delete(`${dataBase}/nodes/${id}.json`).then((response)=>{\r\n      dispatch(changeAlert({type: 'remove', show: true}))\r\n      dispatch(getNodes())\r\n   })\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst headerLogo = 'https://static10.tgstat.ru/channels/_0/e2/e2db1e0464d24e6c4cbcbd17ed634d11.jpg'\r\n\r\nconst Header = () => {\r\n   return (\r\n      <header className='header'>\r\n         <div className='header__content'>\r\n            <img className='header__logo' src={headerLogo} alt=\"\"/>\r\n            <nav className='header__menu menu'>\r\n               <NavLink to='/' exact className='menu__item'>Главная</NavLink>\r\n               <NavLink to='/info' className='menu__item'>Информация</NavLink>\r\n            </nav>\r\n            \r\n         </div> \r\n      </header>\r\n   )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nconst imgBtnClose ='https://www.pngkit.com/png/full/967-9679106_wrong-environmental-defence-canada.png'\r\n\r\nconst NodesList = ({nodes, removeNode, changeAlert}) => {\r\n   return (\r\n      <ul className='nodesList'> \r\n       {nodes.map((node, index)=> (\r\n         <li className='nodesList__node node' key={index}>\r\n            <strong className='node__title'>{node.title}</strong> \r\n            <small className='node__date'>{node.date}</small> \r\n            <button onClick={()=>removeNode(node.id)}  type=\"button\" class=\"node__closeBtn close\">&times;</button>\r\n         </li>))}\r\n      </ul>\r\n   )\r\n}\r\n\r\nexport default NodesList","import React from 'react'\r\n\r\nconst imgBtnClose ='https://www.pngkit.com/png/full/967-9679106_wrong-environmental-defence-canada.png'\r\n\r\n\r\nconst Alert = (props) => {\r\n   const className = props.alert.type === 'remove'?'remove alert-danger':\r\n   props.alert.type === 'add'?'add alert-success':'warning alert-warning'\r\n   \r\n   let message = ''\r\n\r\n   switch(className){\r\n      case 'remove alert-danger': message = 'Задача удалена'; break\r\n      case 'add alert-success': message = 'Задача добавлена'; break\r\n      case 'warning alert-warning': message = 'Что-то пошло не так'; break\r\n      default: break\r\n   }\r\n\r\n   return (\r\n      <div className={'alert'+' '+className}>\r\n         <span> <strong>Внимание!</strong> {message} </span>\r\n         <button onClick={()=>{props.changeAlert({show:false, type:''})}}  type=\"button\" class=\"alert__closeBtn close\">&times;</button>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Alert","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\n\r\nconst validateLength = (value) => {\r\n   if(value) return undefined\r\n   return 'This field is required'\r\n}\r\n\r\nconst AddNode = (props) => {\r\n   return (\r\n      <form className='addNode' onSubmit={props.handleSubmit}>\r\n         <Field className='form-control' component='input' name='node' changeAlert={props.changeAlert} autoFocus/>\r\n         <button className='btn btn-success' type='submit'>Add Task</button>\r\n      </form>\r\n   )\r\n}\r\n\r\nconst AddNodeForm = reduxForm({form: 'addNodeForm'})(AddNode)\r\n\r\nexport default AddNodeForm","import React from 'react'\r\n\r\nconst Information = () =>{\r\n   return (\r\n      <div className=\"info\">\r\n         <div className=\"info__content\">\r\n            <p>Данное приложение преднозначено для создания заметок</p>\r\n            <p>React version: 17.0.1</p>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Information","import './scss/App.scss';\nimport { connect } from 'react-redux';\nimport { addNode, changeAlert, getNodes, removeNode } from './redux/nodesReducer';\nimport { useEffect } from 'react';\nimport Header from './components/header/header';\nimport NodesList from './components/nodesList/nodesList';\nimport Alert from './components/alert/alert';\nimport AddNodeForm from './components/addNode/addNode';\nimport { compose } from 'redux';\nimport { Route, withRouter } from 'react-router-dom';\nimport Information from './components/information/Information';\n\nfunction App(props) {\n  \n  useEffect(()=>{\n    props.getNodes()\n  }, [])\n\n\n  const onSubmit = (formData) =>{\n    props.addNode(\n      {\n        title:formData.node,\n        date: new Date().toJSON()\n        })\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <Header/>\n      <Route path='/' exact render={()=>(\n      <>\n        {(props.alert.show) && <Alert alert={props.alert} changeAlert={props.changeAlert}/>}\n        <AddNodeForm onSubmit={onSubmit} {...props}/>\n        <NodesList nodes={props.nodes} removeNode={props.removeNode} changeAlert={props.changeAlert}/>\n      </>)} \n       />\n       <Route path='/info' exact render={()=><Information/>} />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  nodes: state.data.nodes,\n  alert: state.data.alert\n})\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, {getNodes,removeNode, changeAlert, addNode})\n)(App)\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport nodesReducer from \"./nodesReducer\";\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nconst reducers = combineReducers({\r\n   data: nodesReducer,\r\n   form: formReducer\r\n})\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk))\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter >\n          <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}